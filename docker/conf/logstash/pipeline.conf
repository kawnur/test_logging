input {
    http {
        #host => "0.0.0.0"
        #port => "8080"
        port => "${MY_PORT}"
        tags => ["to_stdout", "to_jdbc"]
        #tags => ["to_stdout"]
        #tags => ["to_jdbc"]
    }
    jdbc {
        jdbc_driver_library => "/logstash/vendor/jar/jdbc/postgresql-42.7.5.jar"
        jdbc_driver_class => "org.postgresql.Driver"  # ?
        jdbc_connection_string => "jdbc:postgresql://${DB_SERVICE_ADDRESS}:${DB_SERVICE_PORT}/${DB_SERVICE_DATABASE}"
        jdbc_user => "${DB_SERVICE_USERNAME}"
        jdbc_password => "${DB_SERVICE_PASSWORD}"
        #parameters => { "favorite_artist" => "Beethoven" }
        schedule => "* * * * *"
        #statement => "SELECT * from test4 where artist = :favorite_artist"
        statement => "SELECT * from test4"
        tags => ["to_file"]
    }
}

filter {
    grok {
        match => { "data" => "\[(?<timepoint>(?>\d\d){1,2}-(?:0?[1-9]|1[0-2])-(?:(?:0[1-9])|(?:[12][0-9])|(?:3[01])|[1-9]) (?:2[0123]|[01]?[0-9]):(?:[0-5][0-9]):(?:(?:[0-5]?[0-9]|60)(?:[:.,][0-9]+)?))\]\[%{WORD:mark1}\]\[%{WORD:mark2}\]\[%{WORD:mark3}\]: %{GREEDYDATA:log_message}" }
    }
}

output {
    #if "to_stdout" in [tags] {
    if "to_file" in [tags] {
        stdout {
            codec => json_lines
        }
    }
    if "to_jdbc" in [tags] {
        jdbc {
            #connection_string => 'jdbc:postgresql://10.100.100.30:5432/postgres?user=postgres&password=postgres'
            connection_string => 'jdbc:postgresql://${DB_SERVICE_ADDRESS}:${DB_SERVICE_PORT}/${DB_SERVICE_DATABASE}?user=${DB_SERVICE_USERNAME}&password=${DB_SERVICE_PASSWORD}'
            statement => [ "INSERT INTO test4 (timepoint, field1, field2, field3, log_message) VALUES(CAST (? AS timestamp), ?, ?, ?, ?)", "timepoint", "mark1", "mark2", "mark3", "log_message" ]
        }
    }
    if "to_file" in [tags] {
        file {
            path => "/logstash/out_file"
        }
    }
}
