services:
    service1:
        command: /my/scripts/run
        #command: sleep infinity
        depends_on:
            #- fluentdService
            #- fluentbitService
            - logstashService
        environment:
            - FLUENTD_SERVICE_ADDRESS=$TEST_LOGGING_FLUENTDSERVICE_IPV4_ADDRESS
            - FLUENTD_SERVICE_PORT=$TEST_LOGGING_FLUENTDSERVICE_PORT
            - FLUENTBIT_SERVICE_ADDRESS=$TEST_LOGGING_FLUENTBITSERVICE_IPV4_ADDRESS
            - FLUENTBIT_SERVICE_PORT=$TEST_LOGGING_FLUENTBITSERVICE_PORT
            - LOGSTASH_SERVICE_ADDRESS=$TEST_LOGGING_LOGSTASHSERVICE_IPV4_ADDRESS
            - LOGSTASH_SERVICE_PORT=$TEST_LOGGING_LOGSTASHSERVICE_PORT
        image: service
        networks:
            testLoggingNetwork:
                ipv4_address: $TEST_LOGGING_SERVICE1_IPV4_ADDRESS
        volumes:
            - type: bind
              source: ../../build-test_logging-Desktop-Debug
              target: /my/app
            - type: bind
              source: ./scripts/service
              target: /my/scripts
            - type: bind
              source: /usr/lib/x86_64-linux-gnu/
              target: /usr/lib/x86_64-linux-gnu/mySharedLibs

    service2:
        command: /my/scripts/run
        depends_on:
            #- fluentdService
            #- fluentbitService
            - logstashService
        environment:
            - FLUENTD_SERVICE_ADDRESS=$TEST_LOGGING_FLUENTDSERVICE_IPV4_ADDRESS
            - FLUENTD_SERVICE_PORT=$TEST_LOGGING_FLUENTDSERVICE_PORT
            - FLUENTBIT_SERVICE_ADDRESS=$TEST_LOGGING_FLUENTBITSERVICE_IPV4_ADDRESS
            - FLUENTBIT_SERVICE_PORT=$TEST_LOGGING_FLUENTBITSERVICE_PORT
            - LOGSTASH_SERVICE_ADDRESS=$TEST_LOGGING_LOGSTASHSERVICE_IPV4_ADDRESS
            - LOGSTASH_SERVICE_PORT=$TEST_LOGGING_LOGSTASHSERVICE_PORT
        image: service
        networks:
            testLoggingNetwork:
                ipv4_address: $TEST_LOGGING_SERVICE2_IPV4_ADDRESS
        volumes:
            - type: bind
              source: ../../build-test_logging-Desktop-Debug
              target: /my/app
            - type: bind
              source: ./scripts/service
              target: /my/scripts
            - type: bind
              source: /usr/lib/x86_64-linux-gnu/
              target: /usr/lib/x86_64-linux-gnu/mySharedLibs

#    fluentdService:
#        #command: fluentd -c /my/fluentd/conf
#        #command: sleep infinity
#        command: /my/scripts/run
#        user: root
#        depends_on:
#            - dbService
#        environment:
#            - DB_SERVICE_ADDRESS=$TEST_LOGGING_DBSERVICE_IPV4_ADDRESS
#            - DB_SERVICE_PORT=$TEST_LOGGING_DBSERVICE_PORT
#            - DB_SERVICE_DATABASE=postgres
#            - DB_SERVICE_USERNAME=$TEST_LOGGING_DBSERVICE_POSTGRES_USER
#            - DB_SERVICE_PASSWORD=$TEST_LOGGING_DBSERVICE_POSTGRES_PASSWORD
#        image: fluentdservice
#        networks:
#            testLoggingNetwork:
#                ipv4_address: $TEST_LOGGING_FLUENTDSERVICE_IPV4_ADDRESS
#        ports:
#            - $TEST_LOGGING_FLUENTDSERVICE_PORT:$TEST_LOGGING_FLUENTDSERVICE_PORT
#        volumes:
#            - type: bind
#              source: ./conf/fluentd
#              target: /my/fluentd
#            - type: bind
#              source: ./scripts/fluentdservice
#              target: /my/scripts

#    fluentbitService:
#        command: /fluent-bit/bin/fluent-bit -c /my/fluentbit/conf
#        #command: sleep infinity
#        #command: /my/scripts/run
#        #user: root
#        depends_on:
#            - dbService
#        environment:
#            - DB_SERVICE_ADDRESS=$TEST_LOGGING_DBSERVICE_IPV4_ADDRESS
#            - DB_SERVICE_PORT=$TEST_LOGGING_DBSERVICE_PORT
#            - DB_SERVICE_DATABASE=postgres
#            - DB_SERVICE_USERNAME=$TEST_LOGGING_DBSERVICE_POSTGRES_USER
#            - DB_SERVICE_PASSWORD=$TEST_LOGGING_DBSERVICE_POSTGRES_PASSWORD
#        image: fluent/fluent-bit
#        networks:
#            testLoggingNetwork:
#                ipv4_address: $TEST_LOGGING_FLUENTBITSERVICE_IPV4_ADDRESS
#        ports:
#            - $TEST_LOGGING_FLUENTBITSERVICE_PORT:$TEST_LOGGING_FLUENTBITSERVICE_PORT
#        volumes:
#            - type: bind
#              source: ./conf/fluent-bit
#              target: /my/fluentbit
##            - type: bind
##              source: ./scripts/fluentdservice
##              target: /my/scripts

    logstashService:
        #command: fluentd -c /my/fluentd/conf
        #command: sleep infinity
        command: /my/scripts/run
        depends_on:
            - dbService
        environment:
            - DB_SERVICE_ADDRESS=$TEST_LOGGING_DBSERVICE_IPV4_ADDRESS
            - DB_SERVICE_PORT=$TEST_LOGGING_DBSERVICE_PORT
            - DB_SERVICE_DATABASE=postgres
            - DB_SERVICE_USERNAME=$TEST_LOGGING_DBSERVICE_POSTGRES_USER
            - DB_SERVICE_PASSWORD=$TEST_LOGGING_DBSERVICE_POSTGRES_PASSWORD
        image: logstashservice
        networks:
            testLoggingNetwork:
                ipv4_address: $TEST_LOGGING_LOGSTASHSERVICE_IPV4_ADDRESS
        ports:
            - $TEST_LOGGING_LOGSTASHSERVICE_PORT:$TEST_LOGGING_LOGSTASHSERVICE_PORT
        volumes:
            - type: bind
              source: ./conf/logstash
              target: /my/logstash
            - type: bind
              source: ./scripts/logstash
              target: /my/scripts

    dbService:
        image: dbservice
        networks:
            testLoggingNetwork:
                ipv4_address: $TEST_LOGGING_DBSERVICE_IPV4_ADDRESS
        ports:
            - $TEST_LOGGING_DBSERVICE_PORT:$TEST_LOGGING_DBSERVICE_PORT
        environment:
            - POSTGRES_USER=$TEST_LOGGING_DBSERVICE_POSTGRES_USER
            - POSTGRES_PASSWORD=$TEST_LOGGING_DBSERVICE_POSTGRES_PASSWORD
        volumes:
            - testLoggingDbVolume:/var/lib/postgresql/data
            - type: bind
              source: ./scripts/sql
              target: /docker-entrypoint-initdb.d

volumes:
    testLoggingDbVolume:

networks:
    testLoggingNetwork:
        external: true
        driver: bridge
        ipam:
            config:
                - subnet: $TEST_LOGGING_DOCKER_NETWORK
